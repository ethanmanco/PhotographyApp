/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package photographyapp;

import java.awt.event.ItemEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static photographyapp.ProfileFrame.MemberID;
import static photographyapp.Upload.MemberID;

/**
 *
 * @author Ethan
 */
public class Edit extends javax.swing.JFrame {

    /**
     * Creates new form Edit
     */
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    public static int MemberID;
    
    public Edit(int id) throws ClassNotFoundException, SQLException {
        MemberID = id;
        initComponents();
        databaseConnection();
        updateList();
    }
    
    private void databaseConnection() throws ClassNotFoundException, SQLException {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        con = DriverManager.getConnection("jdbc:sqlserver://localhost\\MSSQLSERVER01:1433;databaseName=PhotographyDB;encrypt=true;trustServerCertificate=true", "sa", "zelda");
    }
    
    private void updateList() {
        // Populate values
        String sqlquery = "SELECT * FROM Photo WHERE MemberID = " + MemberID;
        String sqlquery2 = "";
        try {
            pst = con.prepareStatement(sqlquery);
            rs = pst.executeQuery();
            while(rs.next()) {
                titleList.addItem(rs.getString("Title"));
            }
            
            updateFields();
        } catch (Exception e) {
        }
    }
    
    private void updateFields() {
        String sqlquery = "";
        String sqlquery2 = "";
        try {
            titleTextPane.setText((String) titleList.getSelectedItem());
            
            sqlquery = "SELECT * FROM Photo WHERE Title = " + "'" + titleList.getSelectedItem() + "'";
            pst = con.prepareStatement(sqlquery);
            rs = pst.executeQuery();
            if (rs.next()) {
                descriptionTextPane.setText(rs.getString("Description"));
                sqlquery = "SELECT * FROM Album WHERE AlbumID = " + "'" + rs.getString("AlbumID") + "'";
                sqlquery2 = "SELECT * FROM Location WHERE LocationID = " + "'" + rs.getString("LocationID") + "'";
            }
            
            pst = con.prepareStatement(sqlquery);
            rs = pst.executeQuery();
            if (rs.next()) {
                albumTextPane.setText(rs.getString("Title"));
            }
            
            pst = con.prepareStatement(sqlquery2);
            rs = pst.executeQuery();
            if (rs.next()) {
                locationTextPane.setText(rs.getString("Name"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uploadPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        descriptionTextPane = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jScrollPane1 = new javax.swing.JScrollPane();
        titleTextPane = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        locationTextPane = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        albumTextPane = new javax.swing.JTextPane();
        removeButton = new javax.swing.JButton();
        titleList = new javax.swing.JComboBox<>();
        selectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Album");

        jLabel3.setText("Title");

        jLabel4.setText("Description");

        jScrollPane4.setViewportView(descriptionTextPane);

        jLabel2.setText("Location");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(titleTextPane);

        jScrollPane2.setViewportView(locationTextPane);

        jScrollPane3.setViewportView(albumTextPane);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        selectButton.setText("Select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout uploadPanelLayout = new javax.swing.GroupLayout(uploadPanel);
        uploadPanel.setLayout(uploadPanelLayout);
        uploadPanelLayout.setHorizontalGroup(
            uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uploadPanelLayout.createSequentialGroup()
                .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, uploadPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(uploadPanelLayout.createSequentialGroup()
                                .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(selectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uploadPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(17, 17, 17)))
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, uploadPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(uploadPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane4))
                            .addGroup(uploadPanelLayout.createSequentialGroup()
                                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        uploadPanelLayout.setVerticalGroup(
            uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadPanelLayout.createSequentialGroup()
                .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(uploadPanelLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(uploadPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectButton))
                        .addGap(20, 20, 20)
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(uploadPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(removeButton))
                .addGap(16, 16, 16)
                .addComponent(saveButton)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(uploadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(uploadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        updateFields();
    }//GEN-LAST:event_selectButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // get all the data entered by the user
        String title = "";

        if (titleTextPane != null) {
            title = titleTextPane.getText();
        }
        System.out.println("Title: " + title);
        try {
            // Create a CallableStatement for calling stored procedures
            CallableStatement stmt = con.prepareCall("{call RemovePhoto(?, ?)}");

            stmt.setInt(1, MemberID);
            stmt.setString(2, title); // Register the OUTPUT parameter

            // Execute the stored procedure
            stmt.execute();

            // Show success message
            JOptionPane.showMessageDialog(null, "Photo removed successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

            // Dispose the current JFrame
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Dispose the current JFrame
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // get all the data entered by the user
        String album = "";
        String location = "";
        String title = "";
        String description = "";


        if (albumTextPane != null) {
            album = albumTextPane.getText();
        }
        System.out.println("Album: " + album);

        if (locationTextPane != null) {
            location = locationTextPane.getText();
        }
        System.out.println("Location: " + location);
        
        if (titleTextPane != null) {
            title = titleTextPane.getText();
        }
        System.out.println("Title: " + title);

        if (descriptionTextPane != null) {
            description = descriptionTextPane.getText();
        }
        System.out.println("Description: " + description);
        
        try {
            // Create a CallableStatement for calling stored procedures
            CallableStatement stmt = con.prepareCall("{call CreateAlbumIfNotExists(?, ?)}");
            
            stmt.setString(1, album);
            stmt.registerOutParameter(2, java.sql.Types.INTEGER); // Register the OUTPUT parameter
            
            // Execute the stored procedure
            stmt.execute();
            
            // Save ID value
            int AlbumID = stmt.getInt(2);
            
            // Create a CallableStatement for calling stored procedures
            stmt = con.prepareCall("{call CreateLocationIfNotExists(?, ?)}");
            
            stmt.setString(1, location);
            stmt.registerOutParameter(2, java.sql.Types.INTEGER); // Register the OUTPUT parameter
            
            // Execute the stored procedure
            stmt.execute();
            
            // Save ID value
            int LocationID = stmt.getInt(2);
        
            stmt = con.prepareCall("{call EditPhoto(?, ?, ?, ?, ?, ?)}");

            // Set the parameters (replace these example values with your actual values)
            int memberID = MemberID;
            String editedTitle = (String) titleList.getSelectedItem();

            stmt.setInt(1, AlbumID);
            stmt.setInt(2, LocationID);
            stmt.setInt(3, memberID);
            stmt.setString(4, editedTitle);
            stmt.setString(5, title);
            stmt.setString(6, description);

            // Execute the stored procedure
            stmt.execute();
            
            // Show success message
            JOptionPane.showMessageDialog(null, "Photo edited successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            // Dispose the current JFrame
            this.dispose();
        } catch (SQLException ex) {
            // Handle any SQL exceptions
            ex.printStackTrace();
        }
    }//GEN-LAST:event_saveButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Edit(MemberID).setVisible(true);
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(Edit.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane albumTextPane;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextPane descriptionTextPane;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextPane locationTextPane;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton selectButton;
    private javax.swing.JComboBox<String> titleList;
    private javax.swing.JTextPane titleTextPane;
    private javax.swing.JPanel uploadPanel;
    // End of variables declaration//GEN-END:variables
}
